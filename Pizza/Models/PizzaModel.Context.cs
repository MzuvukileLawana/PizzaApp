//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pizza.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PizzaContext : DbContext
    {
        public PizzaContext()
            : base("name=PizzaContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Base> Bases { get; set; }
        public virtual DbSet<CoolDrink> CoolDrinks { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<DeliveryMethod> DeliveryMethods { get; set; }
        public virtual DbSet<Feedback> Feedbacks { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Pizza> Pizzas { get; set; }
        public virtual DbSet<Topping> Toppings { get; set; }
        public virtual DbSet<DrinkPrice> DrinkPrices { get; set; }
        public virtual DbSet<OrderHistory> OrderHistories { get; set; }
        public virtual DbSet<ViewBase> ViewBases { get; set; }
        public virtual DbSet<ViewCustomer> ViewCustomers { get; set; }
        public virtual DbSet<ViewFeedback> ViewFeedbacks { get; set; }
        public virtual DbSet<ViewPizza> ViewPizzas { get; set; }
        public virtual DbSet<ViewTopping> ViewToppings { get; set; }
    
        public virtual ObjectResult<string> AdminLogin(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AdminLogin", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<CustomerOrderHistory_Result> CustomerOrderHistory(string emailAddress)
        {
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerOrderHistory_Result>("CustomerOrderHistory", emailAddressParameter);
        }
    
        public virtual int DeleteCustomer(string emailAddress)
        {
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCustomer", emailAddressParameter);
        }
    
        public virtual int DeleteOrderHistory(Nullable<int> orderId)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOrderHistory", orderIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetPriceOnSelectedFlavour(string flavour)
        {
            var flavourParameter = flavour != null ?
                new ObjectParameter("Flavour", flavour) :
                new ObjectParameter("Flavour", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetPriceOnSelectedFlavour", flavourParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetPriceOnSizeSelected(string size)
        {
            var sizeParameter = size != null ?
                new ObjectParameter("size", size) :
                new ObjectParameter("size", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetPriceOnSizeSelected", sizeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetPriceOnToppingSelected(string topping)
        {
            var toppingParameter = topping != null ?
                new ObjectParameter("topping", topping) :
                new ObjectParameter("topping", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetPriceOnToppingSelected", toppingParameter);
        }
    
        public virtual int InsertCustomer(string title, string name, string surname, Nullable<System.DateTime> dateOfBirth, string emailAddress, string physicalAddress, string primarySchool, string password, string repassword)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var physicalAddressParameter = physicalAddress != null ?
                new ObjectParameter("PhysicalAddress", physicalAddress) :
                new ObjectParameter("PhysicalAddress", typeof(string));
    
            var primarySchoolParameter = primarySchool != null ?
                new ObjectParameter("PrimarySchool", primarySchool) :
                new ObjectParameter("PrimarySchool", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var repasswordParameter = repassword != null ?
                new ObjectParameter("Repassword", repassword) :
                new ObjectParameter("Repassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCustomer", titleParameter, nameParameter, surnameParameter, dateOfBirthParameter, emailAddressParameter, physicalAddressParameter, primarySchoolParameter, passwordParameter, repasswordParameter);
        }
    
        public virtual ObjectResult<string> Login(string emailAddress, string password)
        {
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Login", emailAddressParameter, passwordParameter);
        }
    
        public virtual int ResetPassord(string emailAddress, string primarySchool, string password, string repassword)
        {
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var primarySchoolParameter = primarySchool != null ?
                new ObjectParameter("PrimarySchool", primarySchool) :
                new ObjectParameter("PrimarySchool", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var repasswordParameter = repassword != null ?
                new ObjectParameter("Repassword", repassword) :
                new ObjectParameter("Repassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ResetPassord", emailAddressParameter, primarySchoolParameter, passwordParameter, repasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SaveDeliveryDetails(string delivery, string address, string number)
        {
            var deliveryParameter = delivery != null ?
                new ObjectParameter("Delivery", delivery) :
                new ObjectParameter("Delivery", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SaveDeliveryDetails", deliveryParameter, addressParameter, numberParameter);
        }
    
        public virtual int SaveOrder(Nullable<int> userId, Nullable<int> deliveryMethodId, Nullable<int> baseId, Nullable<int> drinkId, Nullable<int> toppingId, Nullable<int> pizzaId, Nullable<System.DateTime> date)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var deliveryMethodIdParameter = deliveryMethodId.HasValue ?
                new ObjectParameter("DeliveryMethodId", deliveryMethodId) :
                new ObjectParameter("DeliveryMethodId", typeof(int));
    
            var baseIdParameter = baseId.HasValue ?
                new ObjectParameter("BaseId", baseId) :
                new ObjectParameter("BaseId", typeof(int));
    
            var drinkIdParameter = drinkId.HasValue ?
                new ObjectParameter("DrinkId", drinkId) :
                new ObjectParameter("DrinkId", typeof(int));
    
            var toppingIdParameter = toppingId.HasValue ?
                new ObjectParameter("ToppingId", toppingId) :
                new ObjectParameter("ToppingId", typeof(int));
    
            var pizzaIdParameter = pizzaId.HasValue ?
                new ObjectParameter("PizzaId", pizzaId) :
                new ObjectParameter("PizzaId", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveOrder", userIdParameter, deliveryMethodIdParameter, baseIdParameter, drinkIdParameter, toppingIdParameter, pizzaIdParameter, dateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> SelectedPizza(string pizzaName)
        {
            var pizzaNameParameter = pizzaName != null ?
                new ObjectParameter("PizzaName", pizzaName) :
                new ObjectParameter("PizzaName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("SelectedPizza", pizzaNameParameter);
        }
    
        public virtual int SendFeedback(string name, string subject, string comment, string emailAddress, string phoneNumber)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendFeedback", nameParameter, subjectParameter, commentParameter, emailAddressParameter, phoneNumberParameter);
        }
    
        public virtual int UpdateCoolDrink(string flavour, Nullable<int> pizzaPrice)
        {
            var flavourParameter = flavour != null ?
                new ObjectParameter("Flavour", flavour) :
                new ObjectParameter("Flavour", typeof(string));
    
            var pizzaPriceParameter = pizzaPrice.HasValue ?
                new ObjectParameter("PizzaPrice", pizzaPrice) :
                new ObjectParameter("PizzaPrice", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCoolDrink", flavourParameter, pizzaPriceParameter);
        }
    
        public virtual int UpdatePizzaPrice(string pizzaName, Nullable<int> pizzaPrice)
        {
            var pizzaNameParameter = pizzaName != null ?
                new ObjectParameter("PizzaName", pizzaName) :
                new ObjectParameter("PizzaName", typeof(string));
    
            var pizzaPriceParameter = pizzaPrice.HasValue ?
                new ObjectParameter("PizzaPrice", pizzaPrice) :
                new ObjectParameter("PizzaPrice", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePizzaPrice", pizzaNameParameter, pizzaPriceParameter);
        }
    
        public virtual int UpdatePizzaTopping(string pizzaTopping, Nullable<int> pizzaPrice)
        {
            var pizzaToppingParameter = pizzaTopping != null ?
                new ObjectParameter("PizzaTopping", pizzaTopping) :
                new ObjectParameter("PizzaTopping", typeof(string));
    
            var pizzaPriceParameter = pizzaPrice.HasValue ?
                new ObjectParameter("PizzaPrice", pizzaPrice) :
                new ObjectParameter("PizzaPrice", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePizzaTopping", pizzaToppingParameter, pizzaPriceParameter);
        }
    
        public virtual int UpdateSizePrice(string pizzaSize, Nullable<int> pizzaPrice)
        {
            var pizzaSizeParameter = pizzaSize != null ?
                new ObjectParameter("PizzaSize", pizzaSize) :
                new ObjectParameter("PizzaSize", typeof(string));
    
            var pizzaPriceParameter = pizzaPrice.HasValue ?
                new ObjectParameter("PizzaPrice", pizzaPrice) :
                new ObjectParameter("PizzaPrice", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSizePrice", pizzaSizeParameter, pizzaPriceParameter);
        }
    }
}
